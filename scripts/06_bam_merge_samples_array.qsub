#!/bin/bash -login
#PBS -l nodes=1:ppn=8,walltime=04:00:00,mem=128gb
#PBS -l feature='intel16'
#PBS -o /mnt/research/efish/2015_genomic_data/scripts
#PBS -N BAM_sample_merge
#PBS -j oe
#PBS -M pitchers@msu.edu
#PBS -m abe
#PBS -r n
#PBS -t 1-167

#### 05_bam_merge_samples_array.qsub
#  â€“ this script globs in files that look like `XXX_NNNN_library_Lane_RX_Ye.aligned.dedup.recalibrated.bam`
#  - this script writes out files that look like `XXX_NNNN_all_libraries.bam`

## Set up some variables
# where do the files live
#dir=/mnt/ls15/scratch/groups/efish/WILL/Pipeline8
dir=/mnt/ls15/scratch/groups/efish/WILL/Pipeline8/bionano

# Current job number
n=${PBS_ARRAYID}
MAXJOBID=`wc -l samples.list | cut -f 1 -d' '`

# load modules
cd ${dir}
module load picardTools/1.89

# make sure that the samples.list file is available
if [ ! -f samples.list ]
  then cp /mnt/research/efish/2015_genomic_data/samples.list ./
fi

individual=` head -${n} samples.list | tail -1 `

#sample=(${individual}*scaf0.aligned.dedup.recalibrated.bam)
sample=(${individual}*Sscaf147.aligned.dedup.recalibrated.bam)

samples=`for i in "${sample[@]}" ; do echo I=${i} ; done | xargs`

# the call to Picard
if [ ! -f ${individual}_all_libraries.bam ]
  then
	java -XX:ParallelGCThreads=8 -jar $PICARD/MergeSamFiles.jar ${samples} O=${individual}_all_libraries.bam
fi

# and now index our new bam
java -XX:ParallelGCThreads=8 -jar $PICARD/BuildBamIndex.jar I=${individual}_all_libraries.bam

#Check to see if this is the last job and email user
if [ ${n} -eq ${MAXJOBID} ]
then
    echo "." | mail -s "The BAM individual merging array is finishing" ${USER}@msu.edu
    cd $PBS_O_WORKDIR
    qsub 06_bam_file_check.qsub
fi

#Print out the statistics for this job
qstat -f ${PBS_JOBID}
