#!/bin/bash -login
#PBS -o /mnt/research/efish/2015_genomic_data/scripts
#PBS -l nodes=1:ppn=4,walltime=04:00:00,mem=30gb
#PBS -N powersim
#PBS -j oe
#PBS -M pitchers@msu.edu
#PBS -m abe
#PBS -r n

# set up working environment

dir=/mnt/ls15/scratch/groups/efish/WILL/Pipeline6/V6-1_chunks/
ref=/mnt/ls15/scratch/groups/efish/P_kings_genome/supercontigs.fasta

cd $dir
mkdir -p simulations
cd simulations
cp ${PBS_O_WORKDIR}/pow_sim_sizes ./

module load plink/1.9

# information about our *real* data:
## 1. no. tests (pruned data) 111814 -> simulationg this takes ~7secs
## 2. Label of this set of SNPs (I'm going with sim0001 - sim1000)
## 3. Reference allele frequency lower bound 0.5 (plink --freq used on pruned data)
## 4. Reference allele frequency upper bound 0.99
## 5. odds ratio for biphasic het/biphasic homo. alt. (bava 1.07)
## 6. odds ratio for biphasic homo. ref./biphasic homo. alt. (bava 0.63)

#rm simspec

for i in `seq 1 20`
  do
  nCS=`head -${i} pow_sim_sizes | tail -1 | cut -f 1`
  nCT=`head -${i} pow_sim_sizes | tail -1 | cut -f 2`
  echo 111814 sim${i} 0.5 0.99 1.57 0.64 > simspec  # ORs represent among-pop-averages
  plink --simulate simspec --simulate-missing 0.48 --out sim${i}_48miss \
        --simulate-ncases ${nCS} --simulate-ncontrols ${nCT}
  plink --simulate simspec --simulate-missing 0.24 --out sim${i}_24miss \
        --simulate-ncases ${nCS} --simulate-ncontrols ${nCT}
  plink --simulate simspec --simulate-missing 0.0 --out sim${i}_00miss \
        --simulate-ncases ${nCS} --simulate-ncontrols ${nCT}

	plink --bfile sim${i}_48miss --logistic --pfilter 1 --allow-no-sex --geno 0.50 \
			--allow-extra-chr --out sim${i}_48miss
	plink --bfile sim${i}_24miss --logistic --pfilter 1 --allow-no-sex --geno 0.50 \
			--allow-extra-chr --out sim${i}_24miss
	plink --bfile sim${i}_00miss --logistic --pfilter 1 --allow-no-sex --geno 0.50 \
			--allow-extra-chr --out sim${i}_00miss
done

for i in `seq 1 20`
  do
  nCS=`head -${i} pow_sim_sizes | tail -1 | cut -f 1`
  nCT=`head -${i} pow_sim_sizes | tail -1 | cut -f 2`
  echo 111814 sim${i} 0.5 0.99 1.07 0.63 > simspec  # ORs represent BAVA (non-mixed)
  plink --simulate simspec --simulate-missing 0.48 --out sim${i}_48miss_nm \
        --simulate-ncases ${nCS} --simulate-ncontrols ${nCT}
  plink --simulate simspec --simulate-missing 0.24 --out sim${i}_24miss_nm \
        --simulate-ncases ${nCS} --simulate-ncontrols ${nCT}
  plink --simulate simspec --simulate-missing 0.0 --out sim${i}_00miss_nm \
        --simulate-ncases ${nCS} --simulate-ncontrols ${nCT}

	plink --bfile sim${i}_48miss_nm --logistic --pfilter 1 --allow-no-sex --geno 0.50 \
			--allow-extra-chr --out sim${i}_48miss_nm
	plink --bfile sim${i}_24miss_nm --logistic --pfilter 1 --allow-no-sex --geno 0.50 \
			--allow-extra-chr --out sim${i}_24miss_nm
	plink --bfile sim${i}_00miss_nm --logistic --pfilter 1 --allow-no-sex --geno 0.50 \
			--allow-extra-chr --out sim${i}_00miss_nm
done

for i in `seq 1 20`
  do
  nCS=`head -${i} pow_sim_sizes | tail -1 | cut -f 1`
  nCT=`head -${i} pow_sim_sizes | tail -1 | cut -f 2`
  echo 111814 sim${i} 0.5 0.99 1.22 0.67 > simspec  # ORs represent BAM & COB (mixed)
  plink --simulate simspec --simulate-missing 0.48 --out sim${i}_48miss_n \
        --simulate-ncases ${nCS} --simulate-ncontrols ${nCT}
  plink --simulate simspec --simulate-missing 0.24 --out sim${i}_24miss_n \
        --simulate-ncases ${nCS} --simulate-ncontrols ${nCT}
  plink --simulate simspec --simulate-missing 0.0 --out sim${i}_00miss_n \
        --simulate-ncases ${nCS} --simulate-ncontrols ${nCT}

	plink --bfile sim${i}_48miss_m --logistic --pfilter 1 --allow-no-sex --geno 0.50 \
			--allow-extra-chr --out sim${i}_48miss_m
	plink --bfile sim${i}_24miss_m --logistic --pfilter 1 --allow-no-sex --geno 0.50 \
			--allow-extra-chr --out sim${i}_24miss_m
	plink --bfile sim${i}_00miss_m --logistic --pfilter 1 --allow-no-sex --geno 0.50 \
			--allow-extra-chr --out sim${i}_00miss_m
done


for i in `ls *assoc.logistic`
	do
	awk -v name=${i} '$9 < 0.05 { count ++ } END { print name "," count/NR }' ${i} >> pow_scores.csv
done

#Print out the statistics for this job
qstat -f ${PBS_JOBID}
