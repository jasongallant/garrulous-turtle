#!/bin/bash -login
#PBS -l nodes=1:ppn=4,walltime=04:00:00,mem=30gb
#PBS -N VCFdisc_5-2
#PBS -j oe
#PBS -M pitchers@msu.edu
#PBS -m abe
#PBS -r n
#PBS -t 1-500

# Current job number
n=${PBS_ARRAYID}

#The JOBSCRIPT variable should be the name of this script
JOBSCRIPT=vcf_disco_chunk_5-2_array.qsub

## Set up some variables
# where do the files live
#dir=/mnt/scratch/pitchers/eFISH/Analysis/
ref=/mnt/scratch/pitchers/eFISH/P_kings_genome/supercontigs.fasta
dir=/mnt/ls15/scratch/groups/efish/WILL/
flagdir=/mnt/research/eFISH/flags

cd ${dir}

mkdir -p V5-2_chunks/

#Set manximum number of jobs for this run
MAXJOBID=`wc -l indices.list | cut -d' ' -f 1`

module load Java/1.8.0_31
mkdir -p tests

# cut out a chunk
thisindex=`head -${n} indices.list | tail -1`

readarray thesefiles < samples.list

for thisfile in ${thesefiles[@]}
	do
	outputfilename=${thisfile}_slice_${n}.g.vcf
	outdir=V5-2_chunks/${thisfile}
	mkdir -p ${outdir}

if [ ! -f $flagdir/${outdir}/${outputfilename} ] 
	then
	# # the call to the GATK HaplotypeCaller
	java -Xmx30g -jar /mnt/home/pitchers/GenomeAnalysisTK.jar -T HaplotypeCaller \
				-R ${ref} -I ${thisfile}_all_libraries.bam \
				${thisindex} \
				--genotyping_mode DISCOVERY \
				-stand_emit_conf 30 -stand_call_conf 30 \
		        -o ${outdir}/${outputfilename} \
		        --output_mode EMIT_ALL_CONFIDENT_SITES \
			    --num_threads 1 --num_cpu_threads_per_data_thread 4 \
				--emitRefConfidence GVCF \
				--sample_name ${thisfile} &
	JAVAPID = $!
	wait
	if [ ! $? -eq 0 ] 
	then
		echo "Java process exited abnormally, pid $JAVAPID, exit code $?"
		logger -t vcf_disco "Java Error on file ${dir}/${outdir}/${outputfilename}, $GETSTRIPE $PBS_JOBID ${PBS_ARRAYID}"
	fi
	if [! -f ${outdir}/${outputfilename}]
	then
		echo "Output file not created!"
		GETSTRIPE=`lfs getstripe ${outdir}/${outputfilename}`
		logger -t vcf_disco "Error on file ${dir}/${outdir}/${outputfilename}, $GETSTRIPE, $PBS_JOBID ${PBS_ARRAYID}"
	fi
	
	vcf_test=`java -Xmx30g -jar /mnt/home/pitchers/GenomeAnalysisTK.jar \
				-T ValidateVariants \
				-R ${ref}  -V ${outdir}/${outputfilename} \
				--warnOnErrors \
				--validationTypeToExclude ALLELES \
				--validationTypeToExclude IDS \
				${thisindex} -gvcf ` &
	wait
	if [ ! $? -eq 0 ] 
	then
		echo "Java process exited abnormally, pid $JAVAPID, exit code $?"
		logger -t vcf_disco "Java Error on file ${dir}/${outdir}/${outputfilename}, $GETSTRIPE $PBS_JOBID ${PBS_ARRAYID}"
	fi

	fi #should this fi be here or after the vcf_test check?
	

	if [ `echo ${vcf_test} | grep -c "no warn messages"` -eq 1 ]
		then 
		mkdir -p $flagdir/$outdir/${thisfile}
		touch V5-$flagdir/$outdir/${thisfile}/${outputfilename}
	fi
done


# Calculate next job to run
NEXT=$(( ${n} + 500 ))

#Check to see if next job is past the maximum job id
if [ ${NEXT} -le ${MAXJOBID} ]
then
    cd ${PBS_O_WORKDIR}
    qsub -t ${NEXT} ${JOBSCRIPT}
fi

#Check to see if this is the last job and email user
if [ ${n} -eq ${MAXJOBID} ]
then
	# count the succesfully completed jobs
	for thisfile in ${thesefiles[@]}
    do ls V5-2_chunks/tests/${thisfile}/* | wc -l >> v5_2_gvcf_count
	done

	# determine if rerunning is necessary
	if [ `uniq v5_2_gvcf_count` -eq ${MAXJOBID} ] ; then rerun=FALSE ; else rerun=TRUE ; fi
	rm v5_2_gvcf_count

	# email me
    echo "rerun = ${rerun}" | mail -s "The vcf_disco V5.2 ARRAY is finishing" ${USER}@msu.edu

	# submit either rerun or not job
    cd ${PBS_O_WORKDIR}
	if [ ${rerun} == TRUE ] 
		then qsub ${JOBSCRIPT}
	else
		qsub nextjob
	fi
fi

#Print out the statistics for this job
qstat -f ${PBS_JOBID}
