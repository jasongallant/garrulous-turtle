#!/bin/bash -login
#PBS -l nodes=1:ppn=4,walltime=04:00:00,mem=128gb,feature='intel16'
#PBS -N Align_${PBS_ARRAYID}
#PBS -j oe
#PBS -M pitchers@msu.edu
#PBS -m abe
#PBS -r n
#PBS -t 0-99

#### Edited Wednesday, 22 March 2017
#### moved reference files to research scratch, confirm that globbing seems to work correctly, details scraped from readgroup tags seem to be correct, checked PE vs. SE detection code working,

#The JOBSCRIPT variable should be the name of this script
JOBSCRIPT=02_alignment_array.qsub

## Set up some variables
# where do the files live
# dir=/mnt/ls15/scratch/groups/efish/WILL/Pipeline6/
dir=/mnt/ls15/scratch/groups/efish/WILL/Pipeline7
ref=/mnt/ls15/scratch/groups/efish/P_kings_genome/supercontigs.fasta

# Current job number
n=${PBS_ARRAYID}

# build a list of file names
cd ${dir}
paired=(*R1_pe.trimmed.fq)
unpaired=(*_se.trimmed.fq)
filelist=(`for file in ${paired[@]} ${unpaired[@]}; do echo ${file} ; done`)
thisfile=${filelist[${n}]}

# Set maximum number of jobs for this run
MAXJOBID=`echo ${#filelist[@]}`

# pull out info to build new readgroup labels
thisfastq=`basename ${thisfile}`

flowcell=`head -1 $thisfastq | cut -d' ' -f 1 | cut -d':' -f 3`					   # which flowcell
lane=`head -1 $thisfastq | cut -d' ' -f 1 | cut -d':' -f 4`						   # which lane
sample=`grep --color='never' -Eo '^[A-Z]{3,4}_[0-9]{4}' <<< $(echo ${thisfile})`   # which fish
barcode=`head -1 $thisfastq | cut -d' ' -f 2 | cut -d':' -f 4`					   # which barcode

thisTAG=@RG\\tID:${flowcell}.${lane}\\tSM:${sample}\\tPL:illumina\\tLB:${flowcell}\\tPU:${flowcell}.${lane}.${barcode} # newhotness


# load required modules
# module load bwa/0.7.12.r1044
BWA=/mnt/home/pitchers/bwa
module load picardTools/1.89


# the BWA command -- the 'if' statement decides whether the alignment should be single or paired-end
if [ `grep -Eo 'pe' <<< $(echo ${thisfile})` ]
then
  ${BWA}/bwa mem -v 3 -t 4 -M -T 40 -R ${thisTAG} ${ref} ${thisfile} \
	`basename ${thisfile} R1_pe.trimmed.fq`R2_pe.trimmed.fq > `basename ${thisfile} .trimmed.fq`.aligned.sam
else
  ${BWA}/bwa mem -v 3 -t 4 -M -T 40 -R ${thisTAG} ${ref} ${thisfile} > `basename ${thisfile} .trimmed.fq`.aligned.sam
fi


# check that the output sam files are well-formed
java -XX:ParallelGCThreads=4 -jar ${PICARD}/ValidateSamFile.jar  I=`basename ${thisfile} .trimmed.fq`.aligned.sam  MODE=SUMMARY


NEXT=$(( ${n} + 100 ))

#Check to see if next job is past the maximum job id
if [ ${NEXT} -le ${MAXJOBID} ]
then
    cd ${PBS_O_WORKDIR}
    qsub -t ${NEXT} ${JOBSCRIPT}
fi

#Check to see if this is the last job and email user
if [ ${n} -eq ${MAXJOBID} ]
then
    echo "." | mail -s "The alignment array is finishing" ${USER}@msu.edu
    cd ${PBS_O_WORKDIR}
#    qsub 03_deduplication_array.qsub
fi

#Print out sfastq=`basename ${thisfile}`the statistics for this job
qstat -f ${PBS_JOBID}
