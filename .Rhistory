select<-read.table("/Users/Will/Desktop/=Gmax Review=/=SELECTION=/selection.txt",header=TRUE)#
#
require(MASS)#
require(car)#
require(lme4)#
require(sciplot)#
require(arm)#
#
names(select)
str(select)
select$Study.F<-as.factor(select$Study)
Beta.M2 <- lmer ( absB ~ 1 + Trait + (1|Study.F), REML=T, na.action=na.omit, data=select)#
summary(Beta.M2)
Beta.M8 <- lmer ( absB ~ 0 + Trait + (1|Trait:Study.F), REML=T, na.action=na.omit, data=select ) #longitudinal/repeated measures version - #
summary(Beta.M8)
??lineplot
??lineplot.CI
require(MCMCglmm)
??MCMCglmm
Beta.Bayes <- MCMCglmm(absB ~ 1+Trait, random=~ Study.F, data=select )
Beta.Bayes$VCV
Beta.Bayes$Fixed
Beta.Bayes$Sol
plot(Beta.Bayes$VCV)
Beta.Bayes <- MCMCglmm(absB ~ 1+Trait, random=~ Trait:Study.F, data=select )#
plot(Beta.Bayes$VCV)
HPD(Beta.Bayes)
Hpd(Beta.Bayes)
hpd(Beta.Bayes)
Hpd(Beta.Bayes$Sol)
HPD(Beta.Bayes$Sol)
HPDinterval(Beta.Bayes$Sol)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, data=select )
HPDinterval(Beta.Bayes$Sol)
plot(Beta.Bayes$VCV)
posterior.mode(Beta.Bayes$Sol)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=13000, burnin=3000 data=select )#
plot(Beta.Bayes$VCV)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=13000, burnin=3000 data=select )
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=13000, burnin=3000, data=select )
plot(Beta.Bayes$VCV)
HPDinterval(Beta.Bayes$Sol)
posterior.mode(Beta.Bayes$Sol)
names(select)
plot(absB,Study)
plot(absB,Study, data=select)
with(select, plot(absB,Study))
with(select, plot(absB,Study,type='n'))
with(select, plot(absB,Study,type='n',xlab="",ylab=""))
with(select, plot(absB,Study,type='n',xlab="",ylab="",xaxt='n',yaxt='n'))
boxplot(absB~Trait)
boxplot(absB~Trait,data=seelct)
boxplot(absB~Trait,data=select)
max(na.omit(select$absB))
select[which.max(select$absB),]
boxplot(absB~Trait,ylim=c(0,3),data=select)
boxplot(absB~Trait,ylim=c(0,2),data=select)
boxplot(absB~Trait,ylim=c(0,1),data=select)
??plotCI
require(gplots)
plotCI(absB~Trait)
plotCI(absB,Trait)
plotCI(absB,Trait,data=select)
??plotCI
select<-read.table("/Users/Will/Desktop/=Gmax Review=/=SELECTION=/selection.txt",header=TRUE)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=13000, burnin=3000, data=select, verbose=F)
require(MCMCglmm)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=13000, burnin=3000, data=select, verbose=F)
summary(select)
select$Study.F<-as.factor(select$Study)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=13000, burnin=3000, data=select, verbose=F)
plot(Beta.Bayes$VCV)
autocorr(Beta.Bayes$VCV)
acf(Beta.Bayes$VCV)
HPDinterval(Beta.Bayes$VCV)
plot(Beta.Bayes$Sol)
acf(Beta.Bayes$Sol)
HPDinterval(Beta.Bayes$Sol)
posterior.mode(Beta.Bayes$Sol)
summary(Beta.Bayes$Sol)
plot(posterior.mode(Gpos.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(-1,3),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="Gpos values")
Gpos.Bayes <- MCMCglmm(Gpos ~ 0+Trait, random=~ Trait:Study.F, nitt=15000, burnin=3000, data=select, verbose=F)
max(na.omit(select$absB))
select[which.max(select$absB),]
Gneg.M1 <- lmer ( Gneg ~ 0 + Trait + (1|Trait:Study.F), REML=T, na.action=na.omit, data=select ) #longitudinal/repeated measures#
summary(Gneg.M1)
save.image("/Users/Will/Desktop/SelectGLMM.RData")
select<-read.table("/Users/Will/Desktop/BEQR_Gmax/=Gmax Review=/=SELECTION=/selection.txt",header=TRUE)
require(MASS)#
require(car)#
require(lme4)#
require(sciplot)#
require(arm)#
require(MCMCglmm)#
require(gplots)
max(na.omit(select$absB))
select[which.max(select$absB),]
require(MASS)#
require(car)#
require(lme4)#
require(sciplot)#
require(arm)#
require(MCMCglmm)#
require(gplots)
select<-read.table("/Users/Will/Desktop/BEQR_Gmax/=Gmax Review=/=SELECTION=/selection.txt",header=TRUE)
names(select)
str(select)
levels(Trait)
levels(select$Trait)
levels(select$Taxon)
head(select)
summary(select)
max(na.omit(select$absB))
select[which.max(select$absB),]
fix(select)
select <- select[select$absB=<7]
select <- select[select$absB<7]
select <- select[select$absB<"7"]
select <- select[select$absB=<7]
select <- select[select$absB!=7]
select <- select[select$absB=<7,]
select <- select[select$absB<7,]
max(na.omit(select$absB))
select[which.max(select$absB),]
select$Study.F<-as.factor(select$Study)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=13000, burnin=3000, data=select, verbose=F)
prior <- list(G = list(
G1 = list(nu=0.0001, V=1)),
R = list(nu=0.0001, V=1))
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=13000, burnin=3000, data=select, verbose=F)
Beta.M <- lmer ( absB ~ Trait + Taxon + (1|Study.F), REML=T, na.action=na.omit, data=select)#
summary(Beta.M)
ranef(Beta.M)
coef(Beta.M)
anova(Beta.M,test="F")
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=13000, burnin=3000, data=select, verbose=F)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=13000, burnin=3000, data=select, na.action=na.omit, verbose=F)
summary(select)
select <- select[!592,]
summary(select)
select<-read.table("/Users/Will/Desktop/BEQR_Gmax/=Gmax Review=/=SELECTION=/selection.txt",header=TRUE)
#
require(MASS)#
require(car)#
require(lme4)#
require(sciplot)#
require(arm)#
require(MCMCglmm)#
require(gplots)
select$Study.F<-as.factor(select$Study)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=13000, burnin=3000, data=select, verbose=F)
plot(Beta.Bayes$VCV)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
plot(Beta.Bayes$VCV)
autocorr(Beta.Bayes$VCV)
acf(Beta.Bayes$VCV)
HPDinterval(Beta.Bayes$VCV)
plot(Beta.Bayes$Sol)
acf(Beta.Bayes$Sol)
HPDinterval(Beta.Bayes$Sol)
posterior.mode(Beta.Bayes$Sol)
summary(Beta.Bayes$Sol)
boxplot(absB~Trait,ylim=c(0,1),data=select)
plot(posterior.mode(Beta.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(0,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="BETA values")
plot(posterior.mode(Beta.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(0,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="BETA values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Beta.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Beta.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Beta.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Beta.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Beta.Bayes$Sol))[3,1] ) , (HPDinterval(Beta.Bayes$Sol))[3,2] ))#
lines(c(0.5,3.5), c(0.243 ,0.243 ), lty=3 )
Gpos.Bayes <- MCMCglmm(Gpos ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
plot(Gpos.Bayes$VCV)
autocorr(Gpos.Bayes$VCV)
acf(Gpos.Bayes$VCV)
HPDinterval(Gpos.Bayes$VCV)
plot(Gpos.Bayes$Sol)
acf(Gpos.Bayes$Sol)
HPDinterval(Gpos.Bayes$Sol)
posterior.mode(Gpos.Bayes$Sol)
plot(posterior.mode(Gpos.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(-1,3),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="Gpos values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Gpos.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Gpos.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Gpos.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Gpos.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Gpos.Bayes$Sol))[3,1] ) , (HPDinterval(Gpos.Bayes$Sol))[3,2] ))
plot(posterior.mode(Beta.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(0,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="BETA values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Beta.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Beta.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Beta.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Beta.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Beta.Bayes$Sol))[3,1] ) , (HPDinterval(Beta.Bayes$Sol))[3,2] ))#
lines(c(0.5,3.5), c(0.243 ,0.243 ), lty=3 )
plot(posterior.mode(Gpos.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(-1,3),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="Gpos values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Gpos.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Gpos.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Gpos.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Gpos.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Gpos.Bayes$Sol))[3,1] ) , (HPDinterval(Gpos.Bayes$Sol))[3,2] ))
Gneg.Bayes <- MCMCglmm(Gneg ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
plot(Gneg.Bayes$VCV)
autocorr(Gneg.Bayes$VCV)
acf(Gneg.Bayes$VCV)
HPDinterval(Gneg.Bayes$VCV)
plot(Gneg.Bayes$Sol)
acf(Gneg.Bayes$Sol)
HPDinterval(Gneg.Bayes$Sol)
posterior.mode(Gneg.Bayes$Sol)
#
#
plot(posterior.mode(Gneg.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(-1.1,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="Gneg values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Gneg.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Gneg.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Gneg.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Gneg.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Gneg.Bayes$Sol))[3,1] ) , (HPDinterval(Gneg.Bayes$Sol))[3,2] ))
max(na.omit(select$absB))
select[which.max(select$absB),]
nrow(select)
select <- select[1:591&593:846,]
select <- select[=!592,]
select <- select[!=592,]
select <- select[!592,]
summary(select)
select<-read.table("/Users/Will/Desktop/BEQR_Gmax/=Gmax Review=/=SELECTION=/selection.txt",header=TRUE)
select[which.max(select$absB),]
select <- select[1:591|593:nrow(select),]
select <- select[1:591||593:nrow(select),]
summary(select)
str(select)
nrow(select)
select <- select[-592,]
nrow(select)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
select$Study.F<-as.factor(select$Study)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
plot(posterior.mode(Beta.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(0,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="BETA values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Beta.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Beta.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Beta.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Beta.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Beta.Bayes$Sol))[3,1] ) , (HPDinterval(Beta.Bayes$Sol))[3,2] ))#
lines(c(0.5,3.5), c(0.243 ,0.243 ), lty=3 )
lines(c(0.5,3.5), c(0.24 ,0.24 ), lty=3 )
plot(posterior.mode(Beta.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(0,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="BETA values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Beta.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Beta.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Beta.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Beta.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Beta.Bayes$Sol))[3,1] ) , (HPDinterval(Beta.Bayes$Sol))[3,2] ))#
lines(c(0.5,3.5), c(0.24 ,0.24 ), lty=3 )
lines(c(0.5,3.5), c(0.23 ,0.23 ), lty=3 )
lines(c(0.5,3.5), c(0.225 ,0.225 ), lty=3 )
lines(c(0.5,3.5), c(0.235 ,0.235 ), lty=3 )
plot(posterior.mode(Beta.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(0,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="BETA values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Beta.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Beta.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Beta.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Beta.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Beta.Bayes$Sol))[3,1] ) , (HPDinterval(Beta.Bayes$Sol))[3,2] ))#
lines(c(0.5,3.5), c(0.235 ,0.235 ), lty=3 )
Gpos.Bayes <- MCMCglmm(Gpos ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
select[which.max(select$Gpos),]
hist(select$Gpos)
select <- select[-483,]
select[which.max(select$Gpos),]
Gpos.Bayes <- MCMCglmm(Gpos ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
plot(posterior.mode(Gpos.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(-1,3),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="Gpos values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Gpos.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Gpos.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Gpos.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Gpos.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Gpos.Bayes$Sol))[3,1] ) , (HPDinterval(Gpos.Bayes$Sol))[3,2] ))
select[which.max(select$Gneg),]
hist(Gneg)
hist(seelct$Gneg)
hist(select$Gneg)
select[which.min(select$Gneg),]
select <- select[-229,]
hist(select$Gneg)
Gneg.Bayes <- MCMCglmm(Gneg ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
plot(posterior.mode(Gneg.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(-1.1,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="Gneg values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Gneg.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Gneg.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Gneg.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Gneg.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Gneg.Bayes$Sol))[3,1] ) , (HPDinterval(Gneg.Bayes$Sol))[3,2] ))
getwd()
system( "ls ~/Dropbox/IanShare/" )
system( "ls ~/Dropbox/IanShare/HighQualityData/HQ*" )
system( "ls ~/Dropbox/IanShare/HighQualityData/HQMANOVA" )
system( "ls ~/Dropbox/IanShare/HighQualityData/HQMANOVA*" )
system( "ls ~/Dropbox/IanShare/HighQualityData/HQMANOVA3.csv" )
system( "rm HQMANOVA3.csv" )
dir()
summary( these_fsts$fst )
source('~/.active-rstudio-document', echo=TRUE)
these_fsts
summary(these_fsts)
comparisons <- c( "APA_vs_BAM", "APA_vs_BAVA", "APA_vs_COB", "APA_vs_IVI", "APA_vs_MOV", "BAM_vs_BAVA", "BAM_vs_COB", "BAM_vs_IVI", "BAM_vs_MOV", "BAVA_vs_COB", "BAVA_vs_IVI", "BAVA_vs_MOV", "COB_vs_IVI", "COB_vs_MOV", "IVI_vs_MOV" )
windows <- c( ".windowed100kb.step50kb.weir.fst",
".windowed100kb.step100kb.weir.fst",
".windowed200kb.step50kb.weir.fst",
".windowed200kb.step100kb.weir.fst",
# ".windowed500kb.step50kb.weir.fst",
".windowed500kb.step100kb.weir.fst" )
these_fsts <- data.frame()
for (i in 1:15) {
for ( j in 1:length( windows ) ) {
filename <- paste( "Fsts/Fst_", comparisons[i], windows[j], coll='', sep='' )
filesize <- as.numeric( strsplit( gsub( '[ ]+', " ", system( paste( "wc -l ", filename, coll='', sep='' ),
intern=T )), " ")[[1]][2])
readin <- read.table( filename, header=TRUE, nrows=filesize  )
readin <- transmute( readin, scaf=factor( CHROM ), bin=as.numeric( BIN_START ), n_var=as.numeric( N_VARIANTS ),
fst=as.numeric( WEIGHTED_FST ), comp=factor( rep( comparisons[i], nrow( readin ) ) ),
winstep=factor( rep( gsub( '[a-z]', '', windows[j] ), nrow( readin ) ) ),
scaf_bin=factor( paste( scaf, '_', bin, sep='', coll='' ) ),
scaf_comp=factor( paste( scaf, '_', comp, sep='', coll='' )) )  %>%  filter( fst > 0 )
these_fsts <- rbind( these_fsts, readin )
}}
summary( these_fsts )
filter( these_fsts, n_var > 50 ) %>%
ggplot( aes( scaf, fst, col=winstep ) ) + scale_colour_discrete( name="window/step (kb)" ) +
geom_point( alpha=0.1 ) + facet_wrap( ~comp, ncol=3 )
ggplot( these_fsts, aes( x=fst, col=comp ) ) + geom_density( fill="grey" ) +
geom_vline( xintercept=quantile( these_fsts$fst, probs=0.95 ), lty=2 ) +
geom_vline( xintercept=quantile( these_fsts$fst, probs=0.9 ), lty=1 ) + facet_wrap( ~comp )
summary( these_fsts$fst )
length( these_fsts$fst[ these_fsts$winstep ==".100.50.." & these_fsts$fst > quantile( these_fsts$fst, probs=0.9 ) ] )
length( these_fsts$fst[ these_fsts$winstep ==".100.100.." & these_fsts$fst > quantile( these_fsts$fst, probs=0.9 ) ] )
length( these_fsts$fst[ these_fsts$winstep ==".200.50.." & these_fsts$fst > quantile( these_fsts$fst, probs=0.9 ) ] )
length( these_fsts$fst[ these_fsts$winstep ==".200.100.." & these_fsts$fst > quantile( these_fsts$fst, probs=0.9 ) ] )
length( these_fsts$fst[ these_fsts$winstep ==".500.100.." & these_fsts$fst > quantile( these_fsts$fst, probs=0.9 ) ] )
length( these_fsts$fst[ these_fsts$comp == "APA_vs_BAM" & these_fsts$winstep ==".100.50.." & these_fsts$fst > quantile( these_fsts$fst, probs=0.9 ) ] )
taco <- these_fsts[ these_fsts$comp == "APA_vs_BAM" & these_fsts$winstep ==".100.50.." & these_fsts$fst > quantile( these_fsts$fst, probs=0.9 ) ,]
arrange( taco, fst )
arrange( taco, scaf )
setwd( "/Volumes/Old_HD/Dropbox (MSU Efish Lab)/WILL/genome_assembly/garrulous-turtle/" )
require( dplyr )
require( ggplot2 )
require( ggExtra )
require( reshape )
APA_BAM <- read.table( "Fsts/Fst_APA_vs_BAM.windowed100kb.step50kb.weir.fst", header=TRUE )
APA_BAVA <- read.table( "Fsts/Fst_APA_vs_BAVA.windowed100kb.step50kb.weir.fst", header=TRUE )
APA_COB <- read.table( "Fsts/Fst_APA_vs_COB.windowed100kb.step50kb.weir.fst", header=TRUE )
APA_IVI <- read.table( "Fsts/Fst_APA_vs_IVI.windowed100kb.step50kb.weir.fst", header=TRUE )
APA_MOV <- read.table( "Fsts/Fst_APA_vs_MOV.windowed100kb.step50kb.weir.fst", header=TRUE )
BAM_BAVA <- read.table( "Fsts/Fst_BAM_vs_BAVA.windowed100kb.step50kb.weir.fst", header=TRUE )
BAM_COB <- read.table( "Fsts/Fst_BAM_vs_COB.windowed100kb.step50kb.weir.fst", header=TRUE )
BAM_IVI <- read.table( "Fsts/Fst_BAM_vs_IVI.windowed100kb.step50kb.weir.fst", header=TRUE )
BAM_MOV <- read.table( "Fsts/Fst_BAM_vs_MOV.windowed100kb.step50kb.weir.fst", header=TRUE )
BAVA_COB <- read.table( "Fsts/Fst_BAVA_vs_COB.windowed100kb.step50kb.weir.fst", header=TRUE )
BAVA_IVI <- read.table( "Fsts/Fst_BAVA_vs_IVI.windowed100kb.step50kb.weir.fst", header=TRUE )
BAVA_MOV <- read.table( "Fsts/Fst_BAVA_vs_MOV.windowed100kb.step50kb.weir.fst", header=TRUE )
COB_IVI <- read.table( "Fsts/Fst_COB_vs_IVI.windowed100kb.step50kb.weir.fst", header=TRUE )
COB_MOV <- read.table( "Fsts/Fst_COB_vs_MOV.windowed100kb.step50kb.weir.fst", header=TRUE )
IVI_MOV <- read.table( "Fsts/Fst_IVI_vs_MOV.windowed100kb.step50kb.weir.fst", header=TRUE )
sum_APA_BAM <- group_by( APA_BAM, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_APA_BAVA <- group_by( APA_BAVA, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_APA_COB <- group_by( APA_COB, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_APA_IVI <- group_by( APA_IVI, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_APA_MOV <- group_by( APA_MOV, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_BAM_BAVA <- group_by( BAM_BAVA, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_BAM_COB <- group_by( BAM_COB, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_BAM_IVI <- group_by( BAM_IVI, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_BAM_MOV <- group_by( BAM_MOV, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_BAVA_COB <- group_by( BAVA_COB, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_BAVA_IVI <- group_by( BAVA_IVI, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_BAVA_MOV <- group_by( BAVA_MOV, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_COB_IVI <- group_by( COB_IVI, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_COB_MOV <- group_by( COB_MOV, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
sum_IVI_MOV <- group_by( IVI_MOV, CHROM ) %>%
filter( WEIGHTED_FST > 0, MEAN_FST > 0 ) %>%
summarise( w_fst=mean( WEIGHTED_FST ), m_fst=mean( MEAN_FST ), m_var=mean( N_VARIANTS ) )
mydataframes <- list( sum_APA_BAM=sum_APA_BAM, sum_APA_BAVA=sum_APA_BAVA, sum_APA_COB=sum_APA_COB, sum_APA_IVI=sum_APA_IVI, sum_APA_MOV=sum_APA_MOV, sum_BAM_BAVA=sum_BAM_BAVA, sum_BAM_COB=sum_BAM_COB, sum_BAM_IVI=sum_BAM_IVI, sum_BAM_MOV=sum_BAM_MOV, sum_BAVA_COB=sum_BAVA_COB, sum_BAVA_IVI=sum_BAVA_IVI, sum_BAVA_MOV=sum_BAVA_MOV, sum_COB_IVI=sum_COB_IVI, sum_COB_MOV=sum_COB_MOV, sum_IVI_MOV=sum_IVI_MOV )
cor_fst <- rep(NA, 15)
for (i in 1:15) {
cor_fst[i] <- cor( mydataframes[[i]][2], mydataframes[[i]][3] )
new_names <- paste( names( mydataframes[i] ), names( mydataframes[[i]] ), sep='_', coll='' )
names( mydataframes[[i]] ) <- c( "SCAF", new_names[ 2:4 ] )
}
mean( cor_fst )
fsts <- mydataframes$sum_APA_BAM
for (i in 2:15) {
fsts <- merge( fsts, mydataframes[[i]], by.x="SCAF", by.y="SCAF", all.x=TRUE )
}
names(fsts)
ggplot( fsts, aes( sum_APA_BAM_w_fst_, sum_APA_BAM_m_fst_ ) ) + geom_point( col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_APA_BAVA_w_fst_, sum_APA_BAVA_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_APA_COB_w_fst_, sum_APA_COB_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_APA_IVI_w_fst_, sum_APA_IVI_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_APA_MOV_w_fst_, sum_APA_MOV_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_BAM_BAVA_w_fst_, sum_BAM_BAVA_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_BAM_COB_w_fst_, sum_BAM_COB_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_BAM_IVI_w_fst_, sum_BAM_IVI_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_BAM_MOV_w_fst_, sum_BAM_MOV_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_BAVA_COB_w_fst_, sum_BAVA_COB_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_BAVA_IVI_w_fst_, sum_BAVA_IVI_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_BAVA_MOV_w_fst_, sum_BAVA_MOV_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_COB_IVI_w_fst_, sum_COB_IVI_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_COB_MOV_w_fst_, sum_COB_MOV_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
geom_point( aes( sum_IVI_MOV_w_fst_, sum_COB_IVI_m_fst_ ), col=rgb( 0.1, 0.1, 0.1, 0.1 ) ) +
xlab( "adjusted Fst" ) + ylab( "Fst" ) + geom_abline( intercept=0, slope=1, col="red" )
filter_fsts <- filter( fsts, SCAF=="Scaffold4" | SCAF=="Scaffold8" | SCAF=="Scaffold22" | SCAF=="Scaffold60" | SCAF=="Scaffold77" ) %>% melt()
filter( filter_fsts,  variable %in% grep( "w_fst", levels(filter_fsts$variable), value=TRUE ) ) %>%
ggplot( aes( SCAF, value, group=variable ) ) + geom_point( aes( col=variable )) +
geom_line( aes( col=variable )) + scale_colour_discrete( name="comparison",
labels=gsub( "sum_([A-Z]{3,4})_([A-Z]{3,4})_[wm]_[fstvar]{3}_", "\\1 vs. \\2",
levels(filter_fsts$variable))[seq(1, 45, 3)] ) +
ylab( "mean adjusted Fst" ) + xlab( "Scaffold" ) + ggtitle( "Adjusted Fst" )
APA_BAM
tbl_df(APA_BAM)
tbl_df(APA_BAM) %>% filter( CHROM == "Scaffold24" )
tbl_df(APA_BAM) %>% filter( CHROM == "Scaffold24" ) %>% colSums()
tbl_df(APA_BAM) %>% filter( CHROM == "Scaffold24" ) %>% select( N_VARIANTS ) %>% colSums()
tbl_df(APA_BAM) %>% filter( CHROM == "Scaffold1910" ) %>% select( N_VARIANTS ) %>% colSums()
tbl_df(APA_BAM) %>% filter( CHROM == "Scaffold3315" ) %>% select( N_VARIANTS ) %>% colSums()
tbl_df(APA_BAM) %>% filter( CHROM == "Scaffold3294" ) %>% select( N_VARIANTS ) %>% colSums()
