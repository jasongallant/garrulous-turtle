require(car)#
require(lme4)#
require(sciplot)#
require(arm)#
require(MCMCglmm)#
require(gplots)
select$Study.F<-as.factor(select$Study)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=13000, burnin=3000, data=select, verbose=F)
plot(Beta.Bayes$VCV)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
plot(Beta.Bayes$VCV)
autocorr(Beta.Bayes$VCV)
acf(Beta.Bayes$VCV)
HPDinterval(Beta.Bayes$VCV)
plot(Beta.Bayes$Sol)
acf(Beta.Bayes$Sol)
HPDinterval(Beta.Bayes$Sol)
posterior.mode(Beta.Bayes$Sol)
summary(Beta.Bayes$Sol)
boxplot(absB~Trait,ylim=c(0,1),data=select)
plot(posterior.mode(Beta.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(0,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="BETA values")
plot(posterior.mode(Beta.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(0,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="BETA values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Beta.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Beta.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Beta.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Beta.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Beta.Bayes$Sol))[3,1] ) , (HPDinterval(Beta.Bayes$Sol))[3,2] ))#
lines(c(0.5,3.5), c(0.243 ,0.243 ), lty=3 )
Gpos.Bayes <- MCMCglmm(Gpos ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
plot(Gpos.Bayes$VCV)
autocorr(Gpos.Bayes$VCV)
acf(Gpos.Bayes$VCV)
HPDinterval(Gpos.Bayes$VCV)
plot(Gpos.Bayes$Sol)
acf(Gpos.Bayes$Sol)
HPDinterval(Gpos.Bayes$Sol)
posterior.mode(Gpos.Bayes$Sol)
plot(posterior.mode(Gpos.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(-1,3),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="Gpos values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Gpos.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Gpos.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Gpos.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Gpos.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Gpos.Bayes$Sol))[3,1] ) , (HPDinterval(Gpos.Bayes$Sol))[3,2] ))
plot(posterior.mode(Beta.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(0,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="BETA values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Beta.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Beta.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Beta.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Beta.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Beta.Bayes$Sol))[3,1] ) , (HPDinterval(Beta.Bayes$Sol))[3,2] ))#
lines(c(0.5,3.5), c(0.243 ,0.243 ), lty=3 )
plot(posterior.mode(Gpos.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(-1,3),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="Gpos values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Gpos.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Gpos.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Gpos.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Gpos.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Gpos.Bayes$Sol))[3,1] ) , (HPDinterval(Gpos.Bayes$Sol))[3,2] ))
Gneg.Bayes <- MCMCglmm(Gneg ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
plot(Gneg.Bayes$VCV)
autocorr(Gneg.Bayes$VCV)
acf(Gneg.Bayes$VCV)
HPDinterval(Gneg.Bayes$VCV)
plot(Gneg.Bayes$Sol)
acf(Gneg.Bayes$Sol)
HPDinterval(Gneg.Bayes$Sol)
posterior.mode(Gneg.Bayes$Sol)
#
#
plot(posterior.mode(Gneg.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(-1.1,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="Gneg values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Gneg.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Gneg.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Gneg.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Gneg.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Gneg.Bayes$Sol))[3,1] ) , (HPDinterval(Gneg.Bayes$Sol))[3,2] ))
max(na.omit(select$absB))
select[which.max(select$absB),]
nrow(select)
select <- select[1:591&593:846,]
select <- select[=!592,]
select <- select[!=592,]
select <- select[!592,]
summary(select)
select<-read.table("/Users/Will/Desktop/BEQR_Gmax/=Gmax Review=/=SELECTION=/selection.txt",header=TRUE)
select[which.max(select$absB),]
select <- select[1:591|593:nrow(select),]
select <- select[1:591||593:nrow(select),]
summary(select)
str(select)
nrow(select)
select <- select[-592,]
nrow(select)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
select$Study.F<-as.factor(select$Study)
Beta.Bayes <- MCMCglmm(absB ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
plot(posterior.mode(Beta.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(0,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="BETA values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Beta.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Beta.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Beta.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Beta.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Beta.Bayes$Sol))[3,1] ) , (HPDinterval(Beta.Bayes$Sol))[3,2] ))#
lines(c(0.5,3.5), c(0.243 ,0.243 ), lty=3 )
lines(c(0.5,3.5), c(0.24 ,0.24 ), lty=3 )
plot(posterior.mode(Beta.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(0,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="BETA values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Beta.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Beta.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Beta.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Beta.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Beta.Bayes$Sol))[3,1] ) , (HPDinterval(Beta.Bayes$Sol))[3,2] ))#
lines(c(0.5,3.5), c(0.24 ,0.24 ), lty=3 )
lines(c(0.5,3.5), c(0.23 ,0.23 ), lty=3 )
lines(c(0.5,3.5), c(0.225 ,0.225 ), lty=3 )
lines(c(0.5,3.5), c(0.235 ,0.235 ), lty=3 )
plot(posterior.mode(Beta.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(0,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="BETA values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Beta.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Beta.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Beta.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Beta.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Beta.Bayes$Sol))[3,1] ) , (HPDinterval(Beta.Bayes$Sol))[3,2] ))#
lines(c(0.5,3.5), c(0.235 ,0.235 ), lty=3 )
Gpos.Bayes <- MCMCglmm(Gpos ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
select[which.max(select$Gpos),]
hist(select$Gpos)
select <- select[-483,]
select[which.max(select$Gpos),]
Gpos.Bayes <- MCMCglmm(Gpos ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
plot(posterior.mode(Gpos.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(-1,3),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="Gpos values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Gpos.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Gpos.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Gpos.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Gpos.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Gpos.Bayes$Sol))[3,1] ) , (HPDinterval(Gpos.Bayes$Sol))[3,2] ))
select[which.max(select$Gneg),]
hist(Gneg)
hist(seelct$Gneg)
hist(select$Gneg)
select[which.min(select$Gneg),]
select <- select[-229,]
hist(select$Gneg)
Gneg.Bayes <- MCMCglmm(Gneg ~ 0+Trait, random=~ Trait:Study.F, nitt=18000, burnin=3000, data=select, verbose=F)
plot(posterior.mode(Gneg.Bayes$Sol),xlab="Trait Type",ylab="Posterior Mode",ylim=c(-1.1,0.5),pch=16,cex=1.5,xlim=c(0.5,3.5),xaxt="n",main="Gneg values")#
axis(side=1,labels=c("L-H.","Mor.","SS."),at=c(1,2,3))#
lines( c(1,1), c((as.table(HPDinterval(Gneg.Bayes$Sol))[1,1] ) , (as.table(HPDinterval(Gneg.Bayes$Sol))[1,2] )))#
lines( c(2,2), c((as.table(HPDinterval(Gneg.Bayes$Sol))[2,1] ) , ( as.table(HPDinterval(Gneg.Bayes$Sol))[2,2])))#
lines( c(3,3), c((as.table(HPDinterval(Gneg.Bayes$Sol))[3,1] ) , (HPDinterval(Gneg.Bayes$Sol))[3,2] ))
getwd()
system( "ls ~/Dropbox/IanShare/" )
system( "ls ~/Dropbox/IanShare/HighQualityData/HQ*" )
system( "ls ~/Dropbox/IanShare/HighQualityData/HQMANOVA" )
system( "ls ~/Dropbox/IanShare/HighQualityData/HQMANOVA*" )
system( "ls ~/Dropbox/IanShare/HighQualityData/HQMANOVA3.csv" )
system( "rm HQMANOVA3.csv" )
dir()
source('~/.active-rstudio-document', echo=TRUE)
seqcosts <- read.csv( "~/Downloads/seqcost2015_4.csv" )
str(seqcosts)
seqcosts
seqcosts <- read.csv( "~/Downloads/seqcost2015_4.csv", nrows=53 )
seqcosts
seqcosts <- read.csv( "~/Downloads/seqcost2015_4.csv", nrows=53, ncol=2 )
seqcosts <- read.csv( "~/Downloads/seqcost2015_4.csv", nrows=53 )
str(seqcosts)
seqcosts
gsub( "[\\$,]", "", seqcosts$Cost.per.Mb )
as.numeric( gsub( "[\\$,]", "", seqcosts$Cost.per.Mb ))
as.Date( seqcosts$Date )
as.Date( seqcosts$Date, "%mmm-%dd" )
as.Date( seqcosts$Date, "%mm-%dd" )
as.Date( seqcosts$Date, "%mm-%YY" )
as.Date( seqcosts$Date, "%m-%y" )
as.Date( seqcosts$Date, "%b-%y" )
as.Date( paste( "01-", seqcosts$Date, sep=""), "%d-%b-%y" )
mutate( seqcosts, cost= as.numeric( gsub( "[\\$,]", "", seqcosts$Cost.per.Mb )), date= as.Date( paste( "01-", seqcosts$Date, sep=""), "%d-%b-%y" ) )
require(dplyr)
mutate( seqcosts, cost= as.numeric( gsub( "[\\$,]", "", seqcosts$Cost.per.Mb )), date= as.Date( paste( "01-", seqcosts$Date, sep=""), "%d-%b-%y" ) )
SeqCost <- transmute( seqcosts, cost= as.numeric( gsub( "[\\$,]", "", seqcosts$Cost.per.Mb )), date= as.Date( paste( "01-", seqcosts$Date, sep=""), "%d-%b-%y" ) )
SeqCost
require(ggplot2)
ggplot( SeqCost, x=date, y=cost ) + geomline()
ggplot( SeqCost, x=date, y=cost ) + geom_line()
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line()
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line() + scale_y_log10()
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue" ) + scale_y_log10()
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=2 ) + scale_y_log10()
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "date" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "Cost (log $s per Mb)" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "Cost (log $s per Mb)" ) +
geom_hline( yintercept=1000  )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "Cost (log $s per Mb)" ) +
geom_hline( yintercept=1000, alpha=0.5 )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "Cost (log $s per Mb)" ) +
geom_hline( yintercept=1000, alpha=0.5 ) + geom_hline( yintercept=100, alpha=0.5 )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "Cost (log $s per Mb)" ) +
geom_hline( yintercept=1000, alpha=0.5 ) + geom_hline( yintercept=100, alpha=0.5 ) +
geom_hline( yintercept=10, alpha=0.5 ) + geom_hline( yintercept=1, alpha=0.5 )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "Cost (log $s per Mb)" ) +
geom_hline( yintercept=1000, alpha=0.5 ) + geom_hline( yintercept=100, alpha=0.5 ) +
geom_hline( yintercept=10, alpha=0.5 ) + geom_hline( yintercept=1, alpha=0.5 ) +
geom_hline( yintercept=0.1, alpha=0.5 )
SeqCost$date
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.5 ) + annotate( geom="text", x="2015-10-01", y=1000, "$1000" )
geom_hline( yintercept=100, alpha=0.5 ) +
geom_hline( yintercept=10, alpha=0.5 ) +
geom_hline( yintercept=1, alpha=0.5 ) +
geom_hline( yintercept=0.1, alpha=0.5 )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.5 ) + annotate( geom="text", x="2015-10-01", y=1000, label="$1000" )
geom_hline( yintercept=100, alpha=0.5 ) +
geom_hline( yintercept=10, alpha=0.5 ) +
geom_hline( yintercept=1, alpha=0.5 ) +
geom_hline( yintercept=0.1, alpha=0.5 )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.5 ) + annotate( geom="text", x="2015-10-01", y=1000, label="$1000" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.5 ) + annotate( geom="text", x=2015-10-01, y=1000, label="$1000" )
as.numeric(SeqCost$date)
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.5 ) + annotate( geom="text", x=16709, y=1000, label="$1000" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.5 ) + annotate( geom="text", x="16709", y=1000, label="$1000" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.5 ) + annotate( geom="text", x=max(date), y=1000, label="$1000" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.5 ) + annotate( geom="text", x=max( SeqCost$date ), y=1000, label="$1000" )
dim(SeqCost)
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.5 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1000" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1000" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1000" ) +
geom_hline( yintercept=100, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$100" ) +
geom_hline( yintercept=10, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$10" ) +
geom_hline( yintercept=1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1" ) +
geom_hline( yintercept=0.1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$0.01" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1000" ) +
geom_hline( yintercept=100, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=100, label="$100" ) +
geom_hline( yintercept=10, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=10, label="$10" ) +
geom_hline( yintercept=1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1, label="$1" ) +
geom_hline( yintercept=0.1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=.1, label="$0.01" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1000" ) +
geom_hline( yintercept=100, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=100, label="$100" ) +
geom_hline( yintercept=10, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=10, label="$10" ) +
geom_hline( yintercept=1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1, label="$1.00" ) +
geom_hline( yintercept=0.1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=.1, label="$0.01" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1000" ) +
geom_hline( yintercept=100, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=100, label="$100" ) +
geom_hline( yintercept=10, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=10, label="$10" ) +
geom_hline( yintercept=1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1, label="$1.00" ) +
geom_hline( yintercept=0.1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=.1, label="$0.01" ) +
theme( "Tufte" )
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1000" ) +
geom_hline( yintercept=100, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=100, label="$100" ) +
geom_hline( yintercept=10, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=10, label="$10" ) +
geom_hline( yintercept=1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1, label="$1.00" ) +
geom_hline( yintercept=0.1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=.1, label="$0.01" ) +
theme_minimal()
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1000" ) +
geom_hline( yintercept=100, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=100, label="$100" ) +
geom_hline( yintercept=10, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=10, label="$10" ) +
geom_hline( yintercept=1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1, label="$1.00" ) +
geom_hline( yintercept=0.1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=.1, label="$0.01" ) +
theme_classic()
require(GGally)
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1000" ) +
geom_hline( yintercept=100, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=100, label="$100" ) +
geom_hline( yintercept=10, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=10, label="$10" ) +
geom_hline( yintercept=1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1, label="$1.00" ) +
geom_hline( yintercept=0.1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=.1, label="$0.01" ) +
theme_dark()
require(ggExtra)
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1000" ) +
geom_hline( yintercept=100, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=100, label="$100" ) +
geom_hline( yintercept=10, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=10, label="$10" ) +
geom_hline( yintercept=1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1, label="$1.00" ) +
geom_hline( yintercept=0.1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=.1, label="$0.01" ) +
theme_minimal()
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1000" ) +
geom_hline( yintercept=100, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=100, label="$100" ) +
geom_hline( yintercept=10, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=10, label="$10" ) +
geom_hline( yintercept=1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1, label="$1.00" ) +
geom_hline( yintercept=0.1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=.1, label="$0.01" ) +
theme_linedraw()
head(SeqCost)
require(dplyr)
require(ggplot2)
seqcosts <- read.csv( "~/Downloads/seqcost2015_4.csv", nrows=53 )
str(seqcosts)
SeqCost <- transmute( seqcosts, cost= as.numeric( gsub( "[\\$,]", "", seqcosts$Cost.per.Mb )), date= as.Date( paste( "01-", seqcosts$Date, sep=""), "%d-%b-%y" ))
ggplot( SeqCost, aes( x=date, y=cost )) + geom_line( col="blue", lwd=1.5 ) + scale_y_log10() + xlab( "Date" ) + ylab( "$cost per Mb" ) +
geom_hline( yintercept=1000, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1000, label="$1000" ) +
geom_hline( yintercept=100, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=100, label="$100" ) +
geom_hline( yintercept=10, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=10, label="$10" ) +
geom_hline( yintercept=1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=1, label="$1.00" ) +
geom_hline( yintercept=0.1, alpha=0.25 ) + annotate( geom="text", x=SeqCost$date[52], y=.1, label="$0.10" ) +
theme_linedraw()
require( ggplot2 )
require( dplyr )
require( tidyr )
setwd( "/Volumes/Old_HD/Dropbox (MSU Efish Lab)/WILL/genome_assembly/garrulous-turtle/" )
geno <- read.table( "hits.geno", header=TRUE )
head( geno )
dim( geno )
names( geno )
# mutate( geno, snp=paste( CHROM, '_', POS, sep='', coll='' ) ) %>% spread( snp,  )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', xaxt='n', yaxt='n' )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15 )
}}
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', xaxt='n', yaxt='n' )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
names(geno[3:65])
names(geno)
names(geno[3:65])
names(geno[3:65])[popkey]
popkey=c( "X3923"="IVI", "X4004"="COB", "X4006"="COB", "X4018"="COB", "X4019"="COB", "X4027"="COB", "X4029"="COB", "X4816"="IVI", "X4832"="IVI", "X4834"="IVI", "X4893"="IVI", "X4894"="IVI", "X4895"="IVI", "X4896"="IVI", "X4897"="IVI", "X4921"="IVI", "X4925"="IVI", "X6494"="BAM", "X6496"="BAM", "X6497"="BAM", "X6498"="BAM", "X6499"="BAM", "X6500"="BAM", "X6501"="BAM", "X6502"="BAM", "X6597"="BAM", "X6598"="BAM", "X6599"="BAM", "X6602"="BAM", "X6603"="BAM", "X6604"="BAM", "X6605"="BAM", "X6619"="BAV", "X6620"="BAV", "X6621"="BAV", "X6622"="BAV", "X6623"="BAV", "X6624"="BAV", "X6625"="BAV", "X6626"="BAV", "X6627"="BAV", "X6675"="APA", "X6676"="APA", "X6677"="APA", "X6678"="APA", "X6679"="APA", "X6680"="APA", "X6681"="APA", "X6682"="APA", "X6683"="APA", "X6684"="APA", "X6685"="APA", "X6716"="MOV", "X6717"="MOV", "X6718"="MOV", "X6719"="MOV", "X6720"="MOV", "X6721"="MOV", "X6722"="MOV", "X6723"="MOV", "X6724"="MOV", "X6725"="MOV", "X6737"="APA" )
names(geno[3:65])[popkey]
names(geno)[popkey]
popkey[names(geno[3:65])]
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])] )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2 )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex=0.75 )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.lab=0.75 )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', xaxt='n', yaxt='n' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.lab=0.75 )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.75 )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', xaxt='n', yaxt='n' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.75 )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
require( dplyr )
data.frame( geno$CHROM, geno$POS, geno$X6619, geno$X6620, geno$X6621, geno$X6622, geno$X6623, geno$X6624, geno$X6625, geno$X6626, geno$X6627, geno$X6605, geno$X6494, geno$X6496, geno$X6497, geno$X6498, geno$X6499, geno$X6500, geno$X6501, geno$X6502, geno$X6597, geno$X6598, geno$X6599, geno$X6602, geno$X6603, geno$X6604, geno$X4004, geno$X4006, geno$X4018, geno$X4019, geno$X4027, geno$X4029, geno$X6737, geno$X6675, geno$X6676, geno$X6677, geno$X6678, geno$X6679, geno$X6680, geno$X6681, geno$X6682, geno$X6683, geno$X6684, geno$X6685, geno$X3923, geno$X4816, geno$X4832, geno$X4834, geno$X4893, geno$X4894, geno$X4895, geno$X4896, geno$X4897, geno$X4921, geno$X4925, geno$X6716, geno$X6717, geno$X6718, geno$X6719, geno$X6720, geno$X6721, geno$X6722, geno$X6723, geno$X6724, geno$X6725)
geno <- data.frame( geno$CHROM, geno$POS, geno$X6619, geno$X6620, geno$X6621, geno$X6622, geno$X6623, geno$X6624, geno$X6625, geno$X6626, geno$X6627, geno$X6605, geno$X6494, geno$X6496, geno$X6497, geno$X6498, geno$X6499, geno$X6500, geno$X6501, geno$X6502, geno$X6597, geno$X6598, geno$X6599, geno$X6602, geno$X6603, geno$X6604, geno$X4004, geno$X4006, geno$X4018, geno$X4019, geno$X4027, geno$X4029, geno$X6737, geno$X6675, geno$X6676, geno$X6677, geno$X6678, geno$X6679, geno$X6680, geno$X6681, geno$X6682, geno$X6683, geno$X6684, geno$X6685, geno$X3923, geno$X4816, geno$X4832, geno$X4834, geno$X4893, geno$X4894, geno$X4895, geno$X4896, geno$X4897, geno$X4921, geno$X4925, geno$X6716, geno$X6717, geno$X6718, geno$X6719, geno$X6720, geno$X6721, geno$X6722, geno$X6723, geno$X6724, geno$X6725)
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', xaxt='n', yaxt='n' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.75 )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.75 )
popkey[names(geno[3:65])]
names(geno)
names(geno) <- sub( "geno.", "", names(geno))
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.75 )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', xaxt='n', yaxt='n' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.75 )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
lines( x=c(153, 153), y=c(1, 63) )
lines( x=c(154, 154), y=c(1, 63) )
popkey[names(geno[3:65])]
lines( x=c(154, 154), y=c(1, 9), lwd=3, col="red" )
lines( x=c(154, 154), y=c(1, 9), lwd=5, col="blue" )
lines( x=c(154, 154), y=c(1, 9), lwd=10, col="blue" )
lines( x=c(154, 154), y=c(1, 9), lwd=10, col="blue" )
lines( x=c(154, 154), y=c(10, 53), lwd=10, col="purple" )
lines( x=c(154, 154), y=c(54, 63), lwd=10, col="red" )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', xaxt='n', yaxt='n' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.75 )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
lines( x=c(154, 154), y=c(1, 9), lwd=10, col="blue" )
lines( x=c(154, 154), y=c(10, 45), lwd=10, col="purple" )
lines( x=c(154, 154), y=c(46, 63), lwd=10, col="red" )
lines( x=c(154, 154), y=c(1, 9), lwd=10, col="blue" )
lines( x=c(154, 154), y=c(10, 45), lwd=10, col="purple" )
lines( x=c(154, 154), y=c(42, 63), lwd=10, col="red" )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', xaxt='n', yaxt='n' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.75 )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
lines( x=c(154, 154), y=c(1, 9), lwd=10, col="blue" )
lines( x=c(154, 154), y=c(10, 42), lwd=10, col="purple" )
lines( x=c(154, 154), y=c(43, 63), lwd=10, col="red" )
popkey[names(geno[3:65])]
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', yaxt='n' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.75 )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
lines( x=c(154, 154), y=c(1, 9), lwd=10, col="blue" )
lines( x=c(154, 154), y=c(10, 24), lwd=10, col="purple" )
lines( x=c(154, 154), y=c(25, 30), lwd=10, col="purple" )
lines( x=c(154, 154), y=c(31, 43), lwd=10, col="purple" )
lines( x=c(154, 154), y=c(44, 54), lwd=10, col="red" )
lines( x=c(154, 154), y=c(55, 63), lwd=10, col="red" )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', yaxt='n' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.75 )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
lines( x=c(154, 154), y=c(1, 9), lwd=10, col="blue" )
lines( x=c(154, 154), y=c(10, 24), lwd=10, col="purple" )
lines( x=c(154, 154), y=c(25, 30), lwd=10, col="purple" )
lines( x=c(154, 154), y=c(31, 42), lwd=10, col="purple" )
lines( x=c(154, 154), y=c(43, 53), lwd=10, col="red" )
lines( x=c(154, 154), y=c(54, 63), lwd=10, col="red" )
lines( x=c(155, 155), y=c(1, 9), lwd=10, col="blue" )
lines( x=c(155, 155), y=c(10, 24), lwd=10, col="purple" )
lines( x=c(155, 155), y=c(25, 30), lwd=10, col="purple" )
lines( x=c(155, 155), y=c(31, 42), lwd=10, col="purple" )
lines( x=c(155, 155), y=c(43, 53), lwd=10, col="red" )
lines( x=c(155, 155), y=c(54, 63), lwd=10, col="red" )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', yaxt='n' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.75 )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
lines( x=c(155, 155), y=c(1, 9), lwd=15, col="blue" )
lines( x=c(155, 155), y=c(10, 24), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(25, 30), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(31, 42), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(43, 53), lwd=15, col="red" )
lines( x=c(155, 155), y=c(54, 63), lwd=15, col="red" )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', yaxt='n' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.5 )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
lines( x=c(155, 155), y=c(1, 9), lwd=15, col="blue" )
lines( x=c(155, 155), y=c(10, 24), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(25, 30), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(31, 42), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(43, 53), lwd=15, col="red" )
lines( x=c(155, 155), y=c(54, 63), lwd=15, col="red" )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', yaxt='n' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.65 )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
lines( x=c(155, 155), y=c(1, 9), lwd=15, col="blue" )
lines( x=c(155, 155), y=c(10, 24), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(25, 30), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(31, 42), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(43, 53), lwd=15, col="red" )
lines( x=c(155, 155), y=c(54, 63), lwd=15, col="red" )
axis( side=1, at=seq( 1, 152, 10 ) )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', yaxt='n', xaxt='t' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.65 )
axis( side=1, at=seq( 1, 152, 10 ), labels="" )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
lines( x=c(155, 155), y=c(1, 9), lwd=15, col="blue" )
lines( x=c(155, 155), y=c(10, 24), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(25, 30), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(31, 42), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(43, 53), lwd=15, col="red" )
lines( x=c(155, 155), y=c(54, 63), lwd=15, col="red" )
axis( side=1, at=seq( 1, 152, 10 ), labels=rep("", 16) )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', yaxt='n', xaxt='t' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.65 )
axis( side=1, at=seq( 1, 152, 10 ), labels=rep("", 16) )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
lines( x=c(155, 155), y=c(1, 9), lwd=15, col="blue" )
lines( x=c(155, 155), y=c(10, 24), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(25, 30), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(31, 42), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(43, 53), lwd=15, col="red" )
lines( x=c(155, 155), y=c(54, 63), lwd=15, col="red" )
plot( 1:2, 1:2, typ='n', xlim=c(1,152), ylim=c(1,63), ylab='Individual', xlab='variant', yaxt='n', xaxt='t' )
axis( side=2, at=1:63, labels=popkey[names(geno[3:65])], las=2, cex.axis=0.65 )
for (i in 1:152) {
for (j in 1:63 ) {
thiscol <- ifelse( geno[ i, j+2 ] == "R", "blue", ifelse( geno[ i, j+2 ] =="A", "red", "purple" ))
points( x=i, y=j, col=thiscol, pch=15, cex=2 )
}}
lines( x=c(155, 155), y=c(1, 9), lwd=15, col="blue" )
lines( x=c(155, 155), y=c(10, 24), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(25, 30), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(31, 42), lwd=15, col="purple" )
lines( x=c(155, 155), y=c(43, 53), lwd=15, col="red" )
lines( x=c(155, 155), y=c(54, 63), lwd=15, col="red" )
